<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!--DO NOT USE context:component-scan because dependencies are defined in this xml file - only MVC annotations are used-->
    <context:annotation-config />

    <!--support Jackson-->
    <bean id="jsonObjectMapper" class="com.eprovement.poptavka.rest.common.JsonObjectMapper" />
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="jsonObjectMapper" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--infrastructure-->
    <bean class="com.eprovement.poptavka.rest.exception.RestExceptionResolver" />

    <!--common-->
    <bean id="businessUserSerializer" class="com.eprovement.poptavka.rest.common.serializer.BusinessUserSerializer" />
    <bean id="businessUserDeserializer" class="com.eprovement.poptavka.rest.common.serializer.BusinessUserDeserializer">
        <constructor-arg ref="localityDeserializer" />
        <constructor-arg ref="registerService" />
    </bean>

    <!--category-->
    <bean id="categorySerializer" class="com.eprovement.poptavka.rest.category.CategorySerializer" />
    <bean id="categoryDeserializer" class="com.eprovement.poptavka.rest.common.serializer.CategoryDeserializer" >
        <constructor-arg ref="categoryService"/>
    </bean>
    <bean class="com.eprovement.poptavka.rest.category.CategoryResource">
        <constructor-arg ref="categoryService" />
        <constructor-arg ref="categorySerializer" />
    </bean>
    <bean id="externalCategorySerializer" class="com.eprovement.poptavka.rest.externalsource.ExternalCategorySerializer" />
    <bean id="sourceCategoryMappingSerializer" class="com.eprovement.poptavka.rest.externalsource.SourceCategoryMappingSerializer" >
        <constructor-arg ref="externalCategorySerializer"/>
    </bean>
    <bean id="externalSourceSerializer" class="com.eprovement.poptavka.rest.externalsource.ExternalSourceSerializer" />
    <bean class="com.eprovement.poptavka.rest.externalsource.ExternalSourceResource">
        <constructor-arg ref="categoryService" />
        <constructor-arg ref="externalSourceSerializer" />
        <constructor-arg ref="categorySerializer" />
    </bean>

    <!--locality-->
    <bean id="localitySerializer" class="com.eprovement.poptavka.rest.locality.LocalitySerializer" />
    <bean id="localityDeserializer" class="com.eprovement.poptavka.rest.common.serializer.LocalityDeserializer" >
        <constructor-arg ref="localityService"/>
    </bean>
    <bean class="com.eprovement.poptavka.rest.locality.LocalityResource">
        <constructor-arg ref="localityService" />
        <constructor-arg ref="localitySerializer" />
    </bean>

    <!--demand-->
    <bean id="demandSerializer" class="com.eprovement.poptavka.rest.demand.DemandSerializer">
        <constructor-arg ref="categorySerializer" />
        <constructor-arg ref="localitySerializer" />
        <constructor-arg ref="clientSerializer" />
    </bean>
    <bean id="demandDeserializer" class="com.eprovement.poptavka.rest.demand.DemandDeserializer" />
    <bean class="com.eprovement.poptavka.rest.demand.DemandResource">
        <constructor-arg ref="demandService" />
        <constructor-arg ref="demandSerializer" />
        <constructor-arg ref="demandDeserializer" />
    </bean>

    <!--client-->
    <bean id="clientSerializer" class="com.eprovement.poptavka.rest.client.ClientSerializer">
        <constructor-arg ref="businessUserSerializer" />
    </bean>
    <bean id="clientDeserializer" class="com.eprovement.poptavka.rest.client.ClientDeserializer">
        <constructor-arg ref="businessUserDeserializer" />
        <constructor-arg ref="clientService" />
    </bean>
    <bean class="com.eprovement.poptavka.rest.client.ClientResource">
        <constructor-arg ref="clientService" />
        <constructor-arg ref="clientSerializer" />
        <constructor-arg ref="clientDeserializer" />
    </bean>

    <!--supplier-->
    <bean id="supplierSerializer" class="com.eprovement.poptavka.rest.supplier.SupplierSerializer">
        <constructor-arg ref="businessUserSerializer" />
    </bean>
    <bean id="supplierDeserializer" class="com.eprovement.poptavka.rest.supplier.SupplierDeserializer">
        <constructor-arg ref="businessUserDeserializer" />
    </bean>
    <bean class="com.eprovement.poptavka.rest.supplier.SupplierResource">
        <constructor-arg ref="supplierService" />
        <constructor-arg ref="supplierSerializer" />
        <constructor-arg ref="supplierDeserializer" />
    </bean>

    <!--Jobs-->
    <!--All jobs (that means beans of type com.eprovement.poptavka.service.jobs.base.Job are autowired  to the constructor-->
    <bean class="com.eprovement.poptavka.rest.jobs.JobsResource" autowire="constructor" />

    <!--User-->
    <bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".html" />
	</bean>
	
    <!--Payment-->
    <bean class="com.eprovement.poptavka.rest.payment.PaypalIPN"/>
    <bean name="paymentService" class="com.eprovement.poptavka.rest.payment.PaymentService"/>

    <bean name="systemUtil" class="com.eprovement.poptavka.rest.payment.SimpleSystemUtil">
		<property name="production">
			<value>false</value>
		</property>
	</bean>

	<bean name="paymentSetting" class="com.eprovement.poptavka.rest.payment.PaymentSetting">
		<property name="businessEmail">
			<value>info@eprovement.com</value>
		</property>
	</bean>
	
    <bean name="paymentValidator" class="com.eprovement.poptavka.rest.payment.PaymentValidator"/>
	
</beans>

