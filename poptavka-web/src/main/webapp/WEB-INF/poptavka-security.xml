<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
    <http auto-config="true" use-expressions="true"  access-denied-page="/krams/auth/denied" entry-point-ref="customAuthenticationEntryPoint">

        <!-- TODO premysliet, ake vsetky zdroje chceme chranit autentizaciou -->
        <intercept-url pattern="/poptavka/service/SOME_NONSENSE" access="hasRole('ROLE_USER')" />
        <!--<intercept-url pattern="/poptavka/service/**" access="hasRole('ROLE_USER')" />-->


        <!-- If the user is authorized, he will be redirected to the success-handler.
           The sucess-handler is responsible of interpreting what to do next.
           Same principle with the failure-handler -->
         <form-login authentication-success-handler-ref="customAuthenticationSuccessHandler" authentication-failure-handler-ref="customAuthenticationFailureHandler" />

    </http>
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <user-service>
                <user authorities="ROLE_USER" name="guest" password="guest"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>

    <!-- Custom entry point to indicate that the user needs to authenticate first -->
    <beans:bean id="customAuthenticationEntryPoint" class="cz.poptavka.sample.server.security.PoptavkaAuthenticationEntryPoint" />


    <!-- Custom handler to indicate that the authentication is successful -->
    <beans:bean id="customAuthenticationSuccessHandler" class="cz.poptavka.sample.server.security.PoptavkaAuthenticationSuccessHandler" />

    <!-- Custom handler to indicate that the authentication has failed -->
    <beans:bean id="customAuthenticationFailureHandler" class="cz.poptavka.sample.server.security.PoptavkaAuthenticationFailureHandler" />




</beans:beans>
