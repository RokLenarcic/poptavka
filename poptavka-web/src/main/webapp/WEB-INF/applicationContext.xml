<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
   
    <beans:import resource="security.xml"/>
    
        <!-- Service -->
    <beans:bean id="userActivationRPCService" class="com.eprovement.poptavka.server.service.user.activation.UserActivationRPCServiceImpl">
        <beans:constructor-arg ref="userVerificationService" />
    </beans:bean>
    
    
    <context:annotation-config/>
    <context:component-scan base-package="com.eprovement.poptavka.server.service"/>
    
    <http auto-config="true">

        <!-- TODO premysliet, ake vsetky zdroje chceme chranit autentizaciou -->
        <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/**/*.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <!--<intercept-url pattern="/poptavka/service/**" access="hasRole('ROLE_USER')" />-->


        <!-- If the user is authorized, he will be redirected to the success-handler.
           The sucess-handler is responsible of interpreting what to do next.
           Same principle with the failure-handler -->

    </http>
    
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="customAuthenticationProvider"/>
    </authentication-manager>
        
</beans:beans>