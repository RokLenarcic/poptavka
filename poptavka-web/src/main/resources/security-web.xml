<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <security:http auto-config="true" entry-point-ref="customAuthenticationEntryPoint">

        <!-- TODO premysliet, ake vsetky zdroje chceme chranit autentizaciou -->
        <security:intercept-url pattern="/poptavka/rpc" access="IS_AUTHENTICATED_FULLY" />
        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/**/*.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <!--<intercept-url pattern="/poptavka/service/**" access="hasRole('ROLE_USER')" />-->


        <!-- If the user is authorized, he will be redirected to the success-handler.
           The sucess-handler is responsible of interpreting what to do next.
           Same principle with the failure-handler -->

    </security:http>

    <!-- Service -->
    <context:annotation-config/>
    <context:spring-configured/>

    <security:global-method-security secured-annotations="enabled" mode="aspectj"/>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="customAuthenticationProvider"/>
    </security:authentication-manager>




    <bean id="customAuthenticationProvider" class="com.eprovement.poptavka.server.security.PoptavkaAuthenticationProvider" >
        <constructor-arg ref="loginService"/>
    </bean>

    <bean id="formLoginFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationSuccessHandler">
            <bean class="com.eprovement.poptavka.server.security.GwtSavedRequestAwareAuthenticationSuccessHandler">
                <property name="alwaysUseDefaultTargetUrl" value="false"></property>
                <property name="defaultTargetUrl" value="/poptavka.html" /> <!-- This is the URL you'll be redirected to after a successful form login -->
            </bean>
        </property>
        <property name="authenticationFailureHandler">
            <bean class="com.eprovement.poptavka.server.security.GwtSavedRequestAwareAuthenticationFailureHandler">
                <property name="defaultFailureUrl" value="/login.html" /> <!-- Used if authentication is out of the responsability scope of GWT -->
            </bean>
        </property>
        <property name="filterProcessesUrl" value="/j_spring_security_check"></property>
    </bean>
  
<!--        Custom entry point to indicate that the user needs to authenticate first -->
    <bean id="customAuthenticationEntryPoint" class="com.eprovement.poptavka.server.security.GwtAwareAuthenticationEntryPoint" />


<!--     Custom handler to indicate that the authentication is succ`essful -->
    <bean id="customAuthenticationSuccessHandler" class="com.eprovement.poptavka.server.security.GwtSavedRequestAwareAuthenticationSuccessHandler" />

<!--     Custom handler to indicate that the authentication has failed -->
    <bean id="customAuthenticationFailureHandler" class="com.eprovement.poptavka.server.security.GwtSavedRequestAwareAuthenticationFailureHandler" />
    
    <bean id="poptavkaAuthListener" class="com.eprovement.poptavka.server.security.PoptavkaAuthListener"/>

    
    
</beans>
