<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit 2.5.0//EN"
        "http://google-web-toolkit.googlecode.com/svn/tags/2.5.0/distro-source/core/src/gwt-module.dtd">
<module rename-to="poptavka">
    <inherits name="com.google.gwt.user.User" />
    <inherits name="com.google.gwt.user.History" />
    <inherits name="com.google.gwt.logging.Logging" />
    <inherits name='com.google.gwt.inject.Inject' />
    <inherits name="com.google.gwt.user.Debug"/>

<!--    IMPORTANT - solves deserialization exception in some cases
    https://groups.google.com/forum/#!topic/gwt-platform/0xayGYO4ngE
    https://groups.google.com/forum/?fromgroups=#!topic/google-web-toolkit/CYZeY3f89sI
    "Client deserializer expected obfuscated classnames in the RPC. Have to set the inherit in the module.gwt.xml file to obfuscate,
    so I'm not sure why the server side it not using it. Jens has some suggestions for tracing that down. Oddly, the Double example
    works properly in the GWT Sample project with the same obfuscating settings. Not sure what's messing with them.-->
    <inherits name="com.google.gwt.user.RemoteServiceObfuscateTypeNames" />
    <!--Another interesting point: http://dansilvablog.blogspot.sk/2013/04/gwt-response-could-not-be-deserialized.html-->

    <!--GWT no longer supports quicks mode. This deny warning on logs.
    We should set mode to HMTL5 standard and update css rather than this.-->
    <extend-configuration-property name="document.compatMode" value="BackCompat"/>

    <!--Animations-->
    <inherits name='com.google.gwt.query.Query'/>

    <!-- LOCALIZATION -->
    <inherits name="com.google.gwt.i18n.I18N" />
    <extend-property name="locale" values="en" />
    <!-- if no locale is specified for some page then following fallback will be used
    see: http://stackoverflow.com/questions/9307697/multiple-locale-gwt-not-working -->
    <set-property-fallback name="locale" value="en" />

    <inherits name="com.google.gwt.uibinder.UiBinder" />
    <inherits name="com.google.gwt.http.HTTP" />
    <!-- <inherits name='com.google.gwt.user.theme.standard.Standard'/> -->
    <inherits name='com.mvp4g.Mvp4gModule' />
    <inherits name='org.adamtacy.GWTEffects' />
    <!-- RequestFactory and JSON module required by security pack -->
    <inherits name="com.google.web.bindery.requestfactory.RequestFactory" />
    <inherits name="com.google.gwt.json.JSON" />
    <!-- Bootstrap styles -->
    <inherits name="com.github.gwtbootstrap.Bootstrap" />
    <!--In my opinion this is useless, because our bootstrap.min.css already contains @media queries-->
    <set-property name="bootstrap.responsiveDesign" value="true"/>

    <!-- GWT validation BEGIN -->
    <inherits name='org.hibernate.validator.HibernateValidator' />

    <!-- Specify the Validator for the Validation bootstrap to use. -->
    <replace-with
        class="com.eprovement.poptavka.client.common.validation.SampleValidatorFactory">
        <when-type-is class="javax.validation.ValidatorFactory" />
    </replace-with>
    <!-- specify the ValidationMessageResolver to use for your custom validation
    messages -->
    <replace-with
        class="com.eprovement.poptavka.client.common.validation.CustomValidationMessagesResolver">
        <when-type-is
            class="com.google.gwt.validation.client.UserValidationMessagesResolver" />
    </replace-with>
    <!-- GWT validation END -->

    <inherits name='com.eprovement.poptavka.DomainEnums' />
    <inherits name='com.eprovement.poptavka.Exception' />

    <entry-point class="com.eprovement.poptavka.client.Poptavka" />

    <source path="client" />
    <source path="server" />
    <source path="shared" />

    <!--<source path="gwttest" />-->

    <!--Replacing of default bootstrap.min.css only! -->
    <source path='resources' />
    <replace-with class="com.eprovement.poptavka.resources.BootstrapConfigurator">
        <when-type-is class="com.github.gwtbootstrap.client.ui.config.Configurator" />
    </replace-with>
    <public path="resources">
        <exclude name="** /*.java" />
        <exclude name="** /*.class" />
    </public>

    <set-property name="user.agent" value="${gwt.user.agent}" />

    <!--Try uncommenting some of the following to configure logging further -->
    <set-property name="gwt.logging.enabled" value="TRUE" />
    <set-property name="gwt.logging.logLevel" value="ALL" />
    <set-property name="gwt.logging.consoleHandler" value="DISABLED" />
    <set-property name="gwt.logging.developmentModeHandler"
                  value="DISABLED" />
    <set-property name="gwt.logging.popupHandler" value="DISABLED" />
    <set-property name="gwt.logging.systemHandler" value="ENABLED" />
    <set-property name="gwt.logging.firebugHandler" value="ENABLED" />

    <!-- Do not define servlets here, use web.xml -->
    
    <!-- Code splitting - left over fragment order -->
    <extend-configuration-property
        name="compiler.splitpoint.initial.sequence"
        value="com.eprovement.poptavka.client.homeWelcome.texts.HowItWorks"/>
    <extend-configuration-property
        name="compiler.splitpoint.initial.sequence"
        value="com.eprovement.poptavka.client.root.footer.texts.FooterInfo"/>

    <!--Super dev mode-->
    <add-linker name="xsiframe"/>
    <set-configuration-property name="devModeRedirectEnabled" value="true"/>
    <!-- enable source maps -->
    <set-property name="compiler.useSourceMaps" value="true" />
</module>
