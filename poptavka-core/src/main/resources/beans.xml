<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:encryption="http://www.jasypt.org/schema/encryption"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.jasypt.org/schema/encryption http://www.jasypt.org/schema/encryption/jasypt-spring31-encryption-1.xsd">

    <!-- Dependencies on beans from data-access.xml exists therefore we must import it -->
    <import resource="data-access.xml"/>
    <!-- messaging -->
    <import resource="messaging-config.xml" />


    <bean id="clientDao" class="com.eprovement.poptavka.dao.user.ClientDaoImpl"/>

    <bean id="preferenceDao" class="com.eprovement.poptavka.dao.user.PreferenceDaoImpl" />

    <bean id="demandDao" class="com.eprovement.poptavka.dao.demand.DemandDaoImpl">
        <property name="treeItemDao" ref="treeItemDao" />
    </bean>

    <bean id="treeItemDao" class="com.eprovement.poptavka.dao.common.TreeItemDaoImpl" />

    <bean id="localityDao" class="com.eprovement.poptavka.dao.address.LocalityDaoImpl" />

    <bean id="categoryDao" class="com.eprovement.poptavka.dao.demand.CategoryDaoImpl" />

    <bean id="supplierDao" class="com.eprovement.poptavka.dao.user.SupplierDaoImpl">
        <property name="treeItemDao" ref="treeItemDao" />
    </bean>

    <bean id="messageDao" class="com.eprovement.poptavka.dao.message.MessageDaoImpl" />

    <bean id="userMessageDao" class="com.eprovement.poptavka.dao.usermessage.UserMessageDaoImpl" />

    <bean id="offerDao" class="com.eprovement.poptavka.dao.offer.OfferDaoImpl" />


    <!-- Service -->
    <bean id="generalService" class="com.eprovement.poptavka.service.GeneralServiceImpl">
        <constructor-arg ref="generalDao" />
    </bean>

    <bean id="fulltextSearchService" class="com.eprovement.poptavka.service.fulltext.HibernateFulltextSearchService" />

    <bean id="registerService" class="com.eprovement.poptavka.service.register.RegisterServiceImpl">
        <constructor-arg ref="generalService" />
    </bean>

    <bean id="treeItemService" class="com.eprovement.poptavka.service.common.TreeItemServiceImpl">
        <constructor-arg ref="treeItemDao" />
    </bean>

    <bean id="clientService" class="com.eprovement.poptavka.service.user.ClientServiceImpl">
        <constructor-arg ref="generalService" />
        <constructor-arg ref="registerService" />
        <constructor-arg ref="userVerificationService" />
        <constructor-arg ref="notificationTypeService" />
        <property name="dao" ref="clientDao"/>
    </bean>

    <bean id="preferenceService" class="com.eprovement.poptavka.service.user.PreferenceServiceImpl">
        <constructor-arg ref="preferenceDao" />
    </bean>

    <bean id="demandService" class="com.eprovement.poptavka.service.demand.DemandServiceImpl">
        <constructor-arg ref="demandDao" />
        <constructor-arg ref="messageService" />
        <property name="clientService" ref="clientService" />
        <property name="registerService" ref="registerService" />
    </bean>

    <bean id="supplierSelection" class="com.eprovement.poptavka.service.demand.NaiveSuppliersSelection">
        <property name="supplierService" ref="supplierService" />
    </bean>

    <bean id="categoryService" class="com.eprovement.poptavka.service.demand.CategoryServiceImpl">
        <constructor-arg ref="categoryDao" />
        <constructor-arg ref="registerService" />
    </bean>

    <bean id="localityService" class="com.eprovement.poptavka.service.address.LocalityServiceImpl">
        <constructor-arg ref="localityDao" />
    </bean>

    <bean id="loginService" class="com.eprovement.poptavka.service.user.LoginServiceImpl">
        <constructor-arg ref="generalService" />
        <constructor-arg ref="passwordEncryptor" />
    </bean>

    <bean id="supplierService" class="com.eprovement.poptavka.service.user.SupplierServiceImpl">
        <constructor-arg ref="generalService" />
        <constructor-arg ref="supplierDao" />
        <constructor-arg ref="registerService" />
        <constructor-arg ref="userVerificationService" />
        <constructor-arg ref="notificationTypeService" />
        <property name="demandService" ref="demandService" />
        <property name="potentialDemandService" ref="potentialDemandsService" />
        <property name="suppliersSelection" ref="supplierSelection" />
    </bean>

    <bean id="messageService" class="com.eprovement.poptavka.service.message.MessageServiceImpl">
        <constructor-arg ref="messageDao" />
        <constructor-arg ref="userMessageService" />
        <constructor-arg ref="notificationService"/>
    </bean>

    <bean id="userMessageService" class="com.eprovement.poptavka.service.usermessage.UserMessageServiceImpl">
        <constructor-arg ref="userMessageDao" />
        <constructor-arg ref="generalService" />
    </bean>

    <bean id="offerService" class="com.eprovement.poptavka.service.offer.OfferServiceImpl">
        <constructor-arg ref="offerDao" />
        <property name="registerService" ref="registerService" />
    </bean>

    <bean id="notificationTypeService" class="com.eprovement.poptavka.service.notification.NotificationTypeServiceImpl" >
        <constructor-arg ref="generalService"/>
    </bean>
    <bean id="mailNotificationSender" class="com.eprovement.poptavka.service.notification.MailNotificationSender">
        <constructor-arg index="0" ref="mailService"/>
        <constructor-arg index="1" value="${mail.noreply.address}"/>
    </bean>
    <bean id="messageNotificationSender" class="com.eprovement.poptavka.service.notification.InternalMessageNotificationSender" >
        <constructor-arg ref="messageService"/>
    </bean>
    <bean id="welcomeMessageSender" class="com.eprovement.poptavka.service.notification.welcome.WelcomeMessageSender">
        <constructor-arg index="0">
            <list>
                <ref bean="mailNotificationSender" />
                 <!--TODO juraj welcome: right now, the internal welcome message is not sent -> se have to set up system account-->
                 <!--for these things and then enable messageNotificationSender-->
                <!--<ref bean="messageNotificationSender" />-->
            </list>
        </constructor-arg>
    </bean>
    <bean id="notificationService" class="com.eprovement.poptavka.service.notification.NotificationServiceImpl">
        <constructor-arg index="0" ref="registerService"/>
        <constructor-arg index="1" ref="mailNotificationSender"/>
    </bean>

    <bean id="userVerificationService" class="com.eprovement.poptavka.service.user.UserVerificationServiceImpl">
        <constructor-arg ref="generalService" />
        <constructor-arg ref="mailService"/>
        <constructor-arg value="${mail.noreply.address}" />
    </bean>

    <bean id="externalUserNotificator" class="com.eprovement.poptavka.service.user.ExternalUserNotificator">
        <constructor-arg ref="generalService"/>
        <constructor-arg ref="registerService"/>
        <constructor-arg ref="userVerificationService"/>
        <constructor-arg ref="mailNotificationSender"/>
    </bean>

    <!-- Jobs -->

    <!--Jobs for notifications-->
    <bean id="notificationsSenderHelper" class="com.eprovement.poptavka.service.jobs.notification.NotificationSenderHelper">
        <constructor-arg index="0" ref="userMessageService" />
        <constructor-arg index="1" ref="notificationService" />
    </bean>
    <bean id="dailyNotificationSender" class="com.eprovement.poptavka.service.jobs.notification.DailyNotificationSender">
        <constructor-arg ref="notificationsSenderHelper"/>
    </bean>
    <bean id="weeklyNotificationSender" class="com.eprovement.poptavka.service.jobs.notification.WeeklyNotificationSender">
        <constructor-arg ref="notificationsSenderHelper"/>
    </bean>


    <bean id="potentialDemandsService" class="com.eprovement.poptavka.service.demand.MessageBasedPotentialDemandService">
        <constructor-arg ref="messageService"/>
        <constructor-arg ref="userMessageService"/>
        <constructor-arg ref="supplierSelection"/>
        <constructor-arg ref="notificationService"/>
    </bean>

    <!-- Other -->
    <bean id="applicationContextProvider" class="com.eprovement.poptavka.application.ApplicationContextProvider"/>

    <!-- JMX -->
    <context:mbean-server />
    <bean id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="poptavka:name=ExceptionLogger" value-ref="exceptionLogger" />
            </map>
        </property>
        <property name="server" ref="mbeanServer" />
        <property name="assembler" ref="jmxAssembler" />
        <!-- Ignore registration of mbean if it is already exists => e.g. LocalityServiceDbTest is falling on
        InstanceAlreadyExistsException when this is not set -->
        <property name="registrationBehaviorName" value="REGISTRATION_IGNORE_EXISTING" />
    </bean>
    <bean id="jmxAssembler" class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
        <property name="managedInterfaces" value="com.eprovement.poptavka.application.PoptavkaManagedOperations" />
    </bean>
    
    <!--Security-->
        <!--  Set up string digester here so we can configure it for more pools if it's a problem -->
        <!-- same settings as StrongPasswordGenerator -->
    <bean id="passwordEncryptor" class="com.eprovement.poptavka.application.security.PasswordEncryptor">
        <property name="stringDigester">
            <encryption:string-digester pool-size="2" algorithm="SHA-256" iterations="100000" salt-size-bytes="16"/>
        </property>
    </bean>

</beans>
