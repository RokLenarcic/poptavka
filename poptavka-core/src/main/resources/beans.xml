<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Dependencies on beans from data-access.xml exists therefore we must import it -->
    <import resource="data-access.xml"/>
    <!-- messaging -->
    <import resource="messaging-config.xml" />


    <bean id="clientDao" class="cz.poptavka.sample.dao.user.ClientDaoImpl"/>

    <bean id="preferenceDao" class="cz.poptavka.sample.dao.user.PreferenceDaoImpl" />

    <bean id="demandDao" class="cz.poptavka.sample.dao.demand.DemandDaoImpl">
        <property name="treeItemDao" ref="treeItemDao" />
    </bean>

    <bean id="ratingDao" class="cz.poptavka.sample.dao.demand.RatingDaoImpl" />

    <bean id="auditDao" class="cz.poptavka.sample.dao.audit.AuditDaoImpl" />

    <bean id="treeItemDao" class="cz.poptavka.sample.dao.common.TreeItemDaoImpl" />

    <bean id="localityDao" class="cz.poptavka.sample.dao.address.LocalityDaoImpl" />

    <bean id="categoryDao" class="cz.poptavka.sample.dao.demand.CategoryDaoImpl" />

    <bean id="supplierDao" class="cz.poptavka.sample.dao.user.SupplierDaoImpl">
        <property name="treeItemDao" ref="treeItemDao" />
    </bean>

    <bean id="messageDao" class="cz.poptavka.sample.dao.message.MessageDaoImpl" />

    <bean id="userMessageDao" class="cz.poptavka.sample.dao.usermessage.UserMessageDaoImpl" />

    <bean id="OfferDao" class="cz.poptavka.sample.dao.offer.OfferDaoImpl" />


    <!-- Service -->
    <bean id="generalService" class="cz.poptavka.sample.service.GeneralServiceImpl">
        <constructor-arg ref="generalDao" />
    </bean>

    <bean id="fulltextSearchService" class="cz.poptavka.sample.service.fulltext.HibernateFulltextSearchService" />

    <bean id="registerService" class="cz.poptavka.sample.service.register.RegisterServiceImpl">
        <constructor-arg ref="generalService" />
    </bean>

    <bean id="treeItemService" class="cz.poptavka.sample.service.common.TreeItemServiceImpl">
        <constructor-arg ref="treeItemDao" />
    </bean>

    <bean id="clientService" class="cz.poptavka.sample.service.user.ClientServiceImpl">
        <constructor-arg ref="generalService" />
        <property name="dao" ref="clientDao"/>
    </bean>

    <bean id="preferenceService" class="cz.poptavka.sample.service.user.PreferenceServiceImpl">
        <constructor-arg ref="preferenceDao" />
    </bean>

    <bean id="demandService" class="cz.poptavka.sample.service.demand.DemandServiceImpl">
        <constructor-arg ref="demandDao" />
        <property name="clientService" ref="clientService" />
        <property name="supplierService" ref="supplierService" />
        <property name="registerService" ref="registerService" />
        <property name="messageService" ref="messageService" />
        <property name="suppliersSelection" ref="demandSelection" />
    </bean>

    <bean id="demandSelection" class="cz.poptavka.sample.service.demand.NaiveSuppliersSelection">
        <property name="supplierService" ref="supplierService" />
    </bean>

    <bean id="ratingService" class="cz.poptavka.sample.service.demand.RatingServiceImpl">
        <constructor-arg ref="ratingDao" />
    </bean>

    <bean id="categoryService" class="cz.poptavka.sample.service.demand.CategoryServiceImpl">
        <constructor-arg ref="categoryDao" />
    </bean>

    <bean id="localityService" class="cz.poptavka.sample.service.address.LocalityServiceImpl">
        <constructor-arg ref="localityDao" />
    </bean>

    <bean id="auditService" class="cz.poptavka.sample.service.audit.AuditServiceImpl">
        <constructor-arg ref="auditDao" />
    </bean>

    <bean id="loginService" class="cz.poptavka.sample.service.user.LoginServiceImpl"/>

    <bean id="supplierService" class="cz.poptavka.sample.service.user.SupplierServiceImpl">
        <constructor-arg ref="generalService" />
        <constructor-arg ref="supplierDao" />
    </bean>

    <bean id="messageService" class="cz.poptavka.sample.service.message.MessageServiceImpl">
        <constructor-arg ref="messageDao" />
        <constructor-arg ref="generalService" />
        <constructor-arg ref="userMessageService" />
    </bean>

    <bean id="userMessageService" class="cz.poptavka.sample.service.usermessage.UserMessageServiceImpl">
        <constructor-arg ref="userMessageDao" />
    </bean>

    <bean id="offerService" class="cz.poptavka.sample.service.offer.OfferServiceImpl">
        <constructor-arg ref="OfferDao" />
        <property name="registerService" ref="registerService" />
    </bean>

    <bean id="processCrawledDemandsService" class="cz.poptavka.sample.service.demand.ProcessCrawledDemandsServiceImpl">
        <constructor-arg ref="demandConverter" />
        <constructor-arg ref="demandService" />
    </bean>

    <!-- Jobs -->
    <bean id="additionalInfoFiller" class="cz.poptavka.sample.service.jobs.AdditionalInfoFiller">
        <property name="demandService" ref="demandService" />
        <property name="supplierService" ref="supplierService" />
    </bean>

    <bean id="demandsToSuppliersSender" class="cz.poptavka.sample.service.jobs.DemandsToSuppliersSender">
        <property name="demandService" ref="demandService" />
    </bean>

    <!-- Other -->
    <bean id="applicationContextProvider" class="cz.poptavka.sample.application.ApplicationContextProvider"/>

    <bean id="demandConverter" class="cz.poptavka.sample.messaging.crawler.DemandConverter">
        <constructor-arg ref="generalService" />
        <constructor-arg ref="demandService" />
        <constructor-arg ref="localityService" />
    </bean>
    <bean id="processCrawledDemandsHandler" class="cz.poptavka.sample.messaging.crawler.ProcessCrawledDemandsHandler">
        <constructor-arg ref="messageTemplate" />
        <constructor-arg ref="processCrawledDemandsService" />
    </bean>

    <!-- Temporary disable processing of incoming crawled demands until more suitable strategy
        for communication with crawler is implemented. -->
    <!--<bean class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"-->
        <!--p:connectionFactory-ref="rabbitConnFactory"-->
        <!--p:queueNames="${amqp.queue}"-->
        <!--p:messageListener-ref="processCrawledDemandsHandler" />-->

    <!--<context:component-scan base-package="cz.poptavka.sample"/>-->

    <!-- Mail support -->
    <bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mailserver.host}" />
        <property name="port" value="${mailserver.port}" />
        <property name="protocol" value="${mailserver.protocol}" />
        <property name="username" value="${mailserver.username}" />
        <property name="password" value="${mailserver.password}" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.quitwait">false</prop>
            </props>
        </property>
    </bean>
    <bean id="mailService" class="cz.poptavka.sample.service.mail.MailServiceImpl" />

    <!-- JMX -->
    <context:mbean-server />
    <bean id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="poptavka:name=ExceptionLogger" value-ref="exceptionLogger" />
            </map>
        </property>
        <property name="server" ref="mbeanServer" />
        <property name="assembler" ref="jmxAssembler" />
    </bean>
    <bean id="jmxAssembler" class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
        <property name="managedInterfaces" value="cz.poptavka.sample.application.PoptavkaManagedOperations" />
    </bean>


</beans>
