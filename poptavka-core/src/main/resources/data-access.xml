<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">


    <bean id="poptavkaDataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />

        <!-- DBCP connection pool - see DbcpConnectionProvider too -->
            <!--validationQuery to ensure that connection does not "read time out"!-->
        <property name="validationQuery" value="${db.connection.pool.validationQuery}" />
        <property name="validationInterval" value="${db.connection.pool.validationInterval}" />
        <property name="initialSize" value="${db.connection.pool.initialSize}" />
        <property name="maxActive" value="${db.connection.pool.maxActive}" />
        <property name="maxIdle" value="${db.connection.pool.maxIdle}" />
        <property name="minIdle" value="${db.connection.pool.minIdle}" />

    </bean>

    <!-- JPA EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!--<property name="persistenceUnitName" value="poptavkaPU" />-->
        <property name="packagesToScan" value="com.eprovement.poptavka.domain" />
        <property name="dataSource" ref="poptavkaDataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="${db.showSql}"/>
                <!-- WATCH OUT when changing "generateDdl" settings to true -> then "hbm2ddl.auto" is automatically set
                     to update regardless of settings in persistence.xml! (this is not an issue since hbm2ddl.auto property
                     is defined in this configuration file)
                     @see HibernateJpaVendorAdapter -->
                <property name="generateDdl" value="${db.generateDdl}"/>
                <property name="databasePlatform" value="${db.dialect}"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <!-- basic properties -->
                <entry key="hibernate.archive.autodetection" value="class, hbm"/>
                <entry key="hibernate.hbm2ddl.auto" value="${db.hbm2ddl.auto}"/>
                <entry key="hibernate.format_sql" value="false"/>
                <entry key="hibernate.connection.useUnicode" value="true"/>
                <entry key="hibernate.connection.characterEncoding" value="UTF-8"/>

                <!-- Hibernate Search
             -       see http://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#search-configuration-directory -->
                <entry key="hibernate.search.default.directory_provider" value="${fulltext.directory_provider}"/>
                <entry key="hibernate.search.default.indexBase" value="${fulltext.indexbase}"/>
                <!-- TODO set up common fulltext search analyzer "caseAccentInsensitiveAnalyzer"
                to avoid necessity of referencing this analyzer from all domain objects that want to participate in full-text search. -->
                <!--<entry key="hibernate.search.analyzer" value="com.eprovement.poptavka.domain.common.DomainObject#caseAccentInsensitiveAnalyzer"/>-->
            </map>
        </property>
    </bean>

    <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <!--<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->


    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- Ensures transparent exceptions' translation -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <tx:annotation-driven transaction-manager="transactionManager" mode="aspectj"/>


    <!-- General Dao -->
    <bean id="metadataUtil" class="com.googlecode.genericdao.search.jpa.hibernate.HibernateMetadataUtil"
          factory-method="getInstanceForEntityManagerFactory">
        <constructor-arg ref="entityManagerFactory" />
    </bean>
    <bean id="mySearchProcessor" class="com.googlecode.genericdao.search.jpa.JPASearchProcessor">
        <constructor-arg ref="metadataUtil" />
    </bean>
    <bean id="generalDao" class="com.eprovement.poptavka.dao.DecoratedGeneralDAOImpl">
        <constructor-arg ref="mySearchProcessor"/>
    </bean>

</beans>
